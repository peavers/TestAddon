name: Update Version and Tag
on:
  push:
    branches:
      - master

permissions:
  contents: write
  actions: write

jobs:
  update-version-and-tag:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.get_version.outputs.new_version }}
      new_tag: ${{ steps.create_tag.outputs.new_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get current version and increment
        id: get_version
        run: |
          CURRENT_VERSION=$(grep -oP '(?<=## Version: ).*' <<TOC_FILENAME>>.toc)
          echo "Current version: $CURRENT_VERSION"
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR="${VERSION_PARTS[0]}"
          MINOR="${VERSION_PARTS[1]}"
          PATCH="${VERSION_PARTS[2]}"
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH}"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version will be: $NEW_VERSION"

      - name: Update TOC version
        run: |
          sed -i "s/^## Version: .*$/## Version: ${{ steps.get_version.outputs.new_version }}/" <<TOC_FILENAME>>.toc

      - name: Commit TOC changes
        run: |
          git config user.name "<<GIT_USER_NAME>>"
          git config user.email "<<GIT_USER_EMAIL>>"
          git add <<TOC_FILENAME>>.toc
          git commit -m "chore: Update TOC version to ${{ steps.get_version.outputs.new_version }}"
          git push

      - name: Create and push tag
        id: create_tag
        run: |
          NEW_TAG="<<TOC_FILENAME>>-${{ steps.get_version.outputs.new_version }}"
          git tag $NEW_TAG
          git push origin $NEW_TAG
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Trigger packaging workflow
        run: |
          curl -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
          https://api.github.com/repos/peavers/<<TOC_FILENAME>>/actions/workflows/packaging.yml/dispatches \
          -d '{"ref":"master"}'
